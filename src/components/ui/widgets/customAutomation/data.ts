/**
 * ============================================================================
 * Custom Automation Widget Data (data.ts)
 * ============================================================================
 * 
 * Ëá™Âä®ÂåñÁ≥ªÁªüÊï∞ÊçÆÂíåÈÖçÁΩÆÊñá‰ª∂
 */

import { AutomationTemplate, DashboardKPI, ActivityItem, SystemHealthItem, ScheduledTask, ConnectorConfig, NotificationSetting } from './types';

// ============================================================================
// Automation Templates Data
// ============================================================================

export const AUTOMATION_TEMPLATES: AutomationTemplate[] = [
  // Demo 1: Data Pipeline Automation - Êï∞ÊçÆËá™Âä®ÂåñÂú∫ÊôØÔºöÊñá‰ª∂‰∏ä‰º†„ÄÅOCRËØªÂèñ„ÄÅËá™Âä®ÊêúÁ¥¢„ÄÅËá™Âä®ÂèëÂ∏É
  {
    id: 'data_pipeline_demo',
    name: 'Smart Data Pipeline',
    description: 'Êô∫ËÉΩÊï∞ÊçÆÊµÅÊ∞¥Á∫øÔºöÊñá‰ª∂‰∏ä‰º† ‚Üí OCRÊñáÊú¨ËØÜÂà´ ‚Üí Êô∫ËÉΩÊêúÁ¥¢ÂåπÈÖç ‚Üí Ëá™Âä®ÂèëÂ∏ÉÂ§ÑÁêÜ',
    icon: 'üìä',
    category: 'data_processing',
    complexity: 'moderate',
    estimatedTime: '10-15 min',
    tags: ['OCR', 'Êñá‰ª∂Â§ÑÁêÜ', 'Ëá™Âä®ÊêúÁ¥¢', 'Êô∫ËÉΩÂèëÂ∏É'],
    steps: [
      { 
        id: 'file_upload', 
        title: 'File Upload', 
        description: '‰∏ä‰º†ÂõæÁâáÊàñPDFÊñáÊ°£', 
        type: 'data_input', 
        status: 'pending', 
        allowsIntervention: true 
      },
      { 
        id: 'ocr_process', 
        title: 'OCR Extract', 
        description: 'OCRÊñáÊú¨ËØÜÂà´‰∏éÁªìÊûÑÂåñÊèêÂèñ', 
        type: 'processing', 
        status: 'pending', 
        allowsIntervention: true 
      },
      { 
        id: 'smart_search', 
        title: 'Smart Search', 
        description: 'Âü∫‰∫éÊèêÂèñÊñáÊú¨ÁöÑÊô∫ËÉΩÊêúÁ¥¢ÂåπÈÖç', 
        type: 'processing', 
        status: 'pending', 
        allowsIntervention: true 
      },
      { 
        id: 'auto_publish', 
        title: 'Auto Publish', 
        description: 'Ëá™Âä®ÂèëÂ∏ÉÂà∞ÁõÆÊ†áÂπ≥Âè∞', 
        type: 'output', 
        status: 'pending', 
        allowsIntervention: false 
      }
    ],
    inputs: [
      { 
        id: 'file_input', 
        name: 'document_file', 
        type: 'file', 
        label: 'ÊñáÊ°£Êñá‰ª∂', 
        required: true, 
        placeholder: 'ÊîØÊåÅ PDF, JPG, PNG Ê†ºÂºè' 
      },
      { 
        id: 'ocr_language', 
        name: 'ocr_language', 
        type: 'select', 
        label: 'OCRËØ≠Ë®Ä', 
        required: true, 
        options: [
          { label: '‰∏≠ÊñáÁÆÄ‰Ωì', value: 'zh-cn' },
          { label: 'Ëã±ËØ≠', value: 'en' },
          { label: '‰∏≠Ëã±Ê∑∑Âêà', value: 'zh-en' }
        ]
      },
      { 
        id: 'search_scope', 
        name: 'search_scope', 
        type: 'multiselect', 
        label: 'ÊêúÁ¥¢ËåÉÂõ¥', 
        required: true, 
        options: [
          { label: '‰∫ßÂìÅÊï∞ÊçÆÂ∫ì', value: 'products' },
          { label: 'Áü•ËØÜÂ∫ì', value: 'knowledge' },
          { label: 'ÊîøÁ≠ñÊñáÊ°£', value: 'policies' },
          { label: 'ÂÆ¢Êà∑‰ø°ÊÅØ', value: 'customers' }
        ]
      },
      { 
        id: 'publish_targets', 
        name: 'publish_targets', 
        type: 'multiselect', 
        label: 'ÂèëÂ∏ÉÁõÆÊ†á', 
        required: true, 
        options: [
          { label: 'ÂÜÖÈÉ®Á≥ªÁªü', value: 'internal' },
          { label: 'ÂæÆ‰ø°ÂÖ¨‰ºóÂè∑', value: 'wechat' },
          { label: '‰ºÅ‰∏öÁΩëÁ´ô', value: 'website' }
        ]
      },
      { 
        id: 'confidence_threshold', 
        name: 'confidence_threshold', 
        type: 'number', 
        label: 'ËØÜÂà´ÁΩÆ‰ø°Â∫¶ÈòàÂÄº', 
        required: false, 
        placeholder: '0.85', 
        validation: { min: 0.1, max: 1.0 } 
      }
    ]
  },
  
  // Demo 2: Content Workflow - ‰øùÊåÅÂéüÊúâÂÜÖÂÆπÂ∑•‰ΩúÊµÅ (ÊöÇÊó∂‰∏çÂèòÂä®)
  {
    id: 'content_workflow',
    name: 'Content Workflow',
    description: 'Automated content creation, review, and publishing pipeline',
    icon: 'üìù',
    category: 'workflow',
    complexity: 'simple',
    estimatedTime: '5-10 min',
    tags: ['Content', 'Review', 'Publishing'],
    steps: [
      { 
        id: 'content_create', 
        title: 'Content Create', 
        description: 'Generate or import content', 
        type: 'data_input', 
        status: 'pending', 
        allowsIntervention: true 
      },
      { 
        id: 'content_review', 
        title: 'Content Review', 
        description: 'Quality check and compliance verification', 
        type: 'decision', 
        status: 'pending', 
        allowsIntervention: true 
      },
      { 
        id: 'content_publish', 
        title: 'Content Publish', 
        description: 'Publish to target channels', 
        type: 'output', 
        status: 'pending', 
        allowsIntervention: false 
      }
    ],
    inputs: [
      { 
        id: 'content_type', 
        name: 'content_type', 
        type: 'select', 
        label: 'Content Type', 
        required: true, 
        options: [
          { label: 'Article', value: 'article' },
          { label: 'Product Description', value: 'product_desc' },
          { label: 'Social Media', value: 'social_media' }
        ]
      },
      { 
        id: 'target_channels', 
        name: 'channels', 
        type: 'multiselect', 
        label: 'Target Channels', 
        required: true, 
        options: [
          { label: 'Website', value: 'website' },
          { label: 'WeChat', value: 'wechat' },
          { label: 'Weibo', value: 'weibo' }
        ]
      },
      { 
        id: 'auto_schedule', 
        name: 'auto_schedule', 
        type: 'boolean', 
        label: 'Auto Schedule', 
        required: false, 
        placeholder: 'Enable scheduled publishing' 
      }
    ]
  },

  // Demo 3: Manufacturing ML Automation - Âà∂ÈÄ†‰∏öÊú∫Âô®Â≠¶‰π†Ëá™Âä®ÂåñÔºöÂõæÂÉèÂàÜÊûê
  {
    id: 'manufacturing_ml_demo',
    name: 'Manufacturing ML Vision',
    description: 'Âà∂ÈÄ†‰∏öÊú∫Âô®Â≠¶‰π†Ëá™Âä®ÂåñÔºö‰∫ßÂìÅÂõæÂÉèË¥®Ê£Ä ‚Üí Áº∫Èô∑Ê£ÄÊµã ‚Üí Ëá™Âä®ÂàÜÁ±ª ‚Üí Ë¥®ÈáèÊä•Âëä',
    icon: 'üè≠',
    category: 'analysis',
    complexity: 'complex',
    estimatedTime: '20-30 min',
    tags: ['Êú∫Âô®Â≠¶‰π†', 'ÂõæÂÉèËØÜÂà´', 'Ë¥®ÈáèÊ£ÄÊµã', 'Âà∂ÈÄ†‰∏ö'],
    steps: [
      { 
        id: 'image_capture', 
        title: 'Image Capture', 
        description: '‰∫ßÂìÅÂõæÂÉèÈááÈõÜ‰∏éÈ¢ÑÂ§ÑÁêÜ', 
        type: 'data_input', 
        status: 'pending', 
        allowsIntervention: true 
      },
      { 
        id: 'defect_detection', 
        title: 'Defect Detection', 
        description: 'AIÁº∫Èô∑Ê£ÄÊµã‰∏éÁâπÂæÅÊèêÂèñ', 
        type: 'processing', 
        status: 'pending', 
        allowsIntervention: true 
      },
      { 
        id: 'quality_classification', 
        title: 'Quality Classification', 
        description: '‰∫ßÂìÅË¥®ÈáèÁ≠âÁ∫ßËá™Âä®ÂàÜÁ±ª', 
        type: 'decision', 
        status: 'pending', 
        allowsIntervention: true 
      },
      { 
        id: 'report_generation', 
        title: 'Report Generation', 
        description: 'ÁîüÊàêË¥®ÈáèÊ£ÄÊµãÊä•Âëä', 
        type: 'output', 
        status: 'pending', 
        allowsIntervention: false 
      }
    ],
    inputs: [
      { 
        id: 'product_images', 
        name: 'product_images', 
        type: 'file', 
        label: '‰∫ßÂìÅÂõæÂÉè', 
        required: true, 
        placeholder: 'ÊîØÊåÅ JPG, PNG Ê†ºÂºèÔºåÂèØÊâπÈáè‰∏ä‰º†' 
      },
      { 
        id: 'product_category', 
        name: 'product_category', 
        type: 'select', 
        label: '‰∫ßÂìÅÁ±ªÂà´', 
        required: true, 
        options: [
          { label: 'ÁîµÂ≠êÂÖÉÂô®‰ª∂', value: 'electronics' },
          { label: 'Êú∫Ê¢∞Èõ∂‰ª∂', value: 'mechanical' },
          { label: 'Á∫∫ÁªáÂìÅ', value: 'textile' },
          { label: 'ÈáëÂ±ûÂà∂ÂìÅ', value: 'metal' },
          { label: 'Â°ëÊñôÂà∂ÂìÅ', value: 'plastic' }
        ]
      },
      { 
        id: 'detection_models', 
        name: 'detection_models', 
        type: 'multiselect', 
        label: 'Ê£ÄÊµãÊ®°Âûã', 
        required: true, 
        options: [
          { label: 'Ë°®Èù¢Áº∫Èô∑Ê£ÄÊµã', value: 'surface_defect' },
          { label: 'Â∞∫ÂØ∏ÂÅèÂ∑ÆÊ£ÄÊµã', value: 'dimension_check' },
          { label: 'Ëâ≤Â∑ÆÊ£ÄÊµã', value: 'color_variation' },
          { label: 'ÂΩ¢ÂèòÊ£ÄÊµã', value: 'shape_deformation' },
          { label: 'Ê±°Ê∏çÊ£ÄÊµã', value: 'contamination' }
        ]
      },
      { 
        id: 'quality_standards', 
        name: 'quality_standards', 
        type: 'select', 
        label: 'Ë¥®ÈáèÊ†áÂáÜ', 
        required: true, 
        options: [
          { label: 'ISO 9001', value: 'iso9001' },
          { label: 'ÂÖ≠Ë•øÊ†ºÁéõ', value: 'six_sigma' },
          { label: 'Ëá™ÂÆö‰πâÊ†áÂáÜ', value: 'custom' },
          { label: 'Ë°å‰∏öÊ†áÂáÜ', value: 'industry' }
        ]
      },
      { 
        id: 'detection_sensitivity', 
        name: 'detection_sensitivity', 
        type: 'select', 
        label: 'Ê£ÄÊµãÊïèÊÑüÂ∫¶', 
        required: true, 
        options: [
          { label: 'È´òÁ≤æÂ∫¶ (>95%)', value: 'high' },
          { label: 'Ê†áÂáÜÁ≤æÂ∫¶ (90-95%)', value: 'standard' },
          { label: 'Âø´ÈÄüÊ£ÄÊµã (85-90%)', value: 'fast' }
        ]
      },
      { 
        id: 'batch_size', 
        name: 'batch_size', 
        type: 'number', 
        label: 'ÊâπÊ¨°Â§ßÂ∞è', 
        required: false, 
        placeholder: '100', 
        validation: { min: 1, max: 1000 } 
      }
    ]
  }
];

// ============================================================================
// Dashboard Data
// ============================================================================

export const DASHBOARD_KPIS: DashboardKPI[] = [
  {
    id: 'active_executions',
    title: 'Active Executions',
    value: '1,847',
    trend: { direction: 'up', percentage: 12.3, period: 'vs last period' },
    color: 'blue',
    icon: '‚ö°'
  },
  {
    id: 'success_rate',
    title: 'Success Rate',
    value: '98.4%',
    trend: { direction: 'up', percentage: 2.4, period: 'vs last period' },
    color: 'green',
    icon: '‚úì'
  },
  {
    id: 'avg_response',
    title: 'Avg Response',
    value: '1.8s',
    trend: { direction: 'down', percentage: 18.7, period: 'vs last period' },
    color: 'purple',
    icon: '‚ö°'
  },
  {
    id: 'data_processed',
    title: 'Data Processed',
    value: '2.4TB',
    trend: { direction: 'up', percentage: 5.2, period: 'vs last period' },
    color: 'orange',
    icon: 'üíæ'
  }
];

export const ACTIVITY_FEED: ActivityItem[] = [
  { 
    id: '1', timestamp: '14:32:45', type: 'success', template: 'ETL Data Processing', 
    description: '2,456 records processed successfully', icon: 'üìä', color: 'green' 
  },
  { 
    id: '2', timestamp: '14:31:12', type: 'warning', template: 'API Integration Sync', 
    description: 'Rate limit warning detected', icon: '‚ö†Ô∏è', color: 'yellow' 
  },
  { 
    id: '3', timestamp: '14:29:38', type: 'success', template: 'Content Workflow', 
    description: '15 articles published successfully', icon: 'üìù', color: 'green' 
  },
  { 
    id: '4', timestamp: '14:28:22', type: 'info', template: 'System Health Check', 
    description: 'All services operational', icon: 'üîç', color: 'blue' 
  },
  { 
    id: '5', timestamp: '14:27:05', type: 'success', template: 'Data ETL Pipeline', 
    description: '5.2GB processed and stored', icon: 'üîÑ', color: 'green' 
  },
  { 
    id: '6', timestamp: '14:25:41', type: 'error', template: 'API Integration', 
    description: 'Connection timeout error', icon: 'üîó', color: 'red' 
  }
];

export const SYSTEM_HEALTH: SystemHealthItem[] = [
  { service: 'Database Pool', status: 'healthy', value: '85%', icon: 'üóÑÔ∏è' },
  { service: 'API Gateway', status: 'healthy', value: '92%', icon: 'üåê' },
  { service: 'Queue Workers', status: 'warning', value: '78%', icon: '‚ö°' },
  { service: 'Storage', status: 'healthy', value: '94%', icon: 'üíæ' }
];

// ============================================================================
// Scheduled Tasks Data
// ============================================================================

export const SCHEDULED_TASKS: ScheduledTask[] = [
  {
    id: 'task_1',
    name: 'Daily Data Backup',
    template: 'ETL Data Processing',
    schedule: 'Daily 02:00',
    status: 'active',
    nextRun: 'Tomorrow 02:00',
    icon: 'üìÖ'
  },
  {
    id: 'task_2',
    name: 'Weekly Report Generation',
    template: 'API Integration Sync',
    schedule: 'Monday 09:00',
    status: 'active',
    nextRun: 'Monday 09:00',
    icon: 'üìä'
  },
  {
    id: 'task_3',
    name: 'Content Review',
    template: 'Content Workflow',
    schedule: 'On file upload',
    status: 'paused',
    nextRun: 'Event triggered',
    icon: 'üìù'
  }
];

// ============================================================================
// Configuration Data
// ============================================================================

export const CONNECTORS: ConnectorConfig[] = [
  { id: 'mysql', name: 'MySQL Database', type: 'database', status: 'connected', icon: 'üóÑÔ∏è' },
  { id: 'wechat', name: 'WeChat API', type: 'api', status: 'connected', icon: 'üí¨' },
  { id: 'email', name: 'Email Service', type: 'service', status: 'disconnected', icon: 'üìß' }
];

export const NOTIFICATION_SETTINGS: NotificationSetting[] = [
  { id: 'task_complete', label: 'Task completion notifications', enabled: true },
  { id: 'task_failure', label: 'Task failure alerts', enabled: true },
  { id: 'daily_report', label: 'Daily execution reports', enabled: false },
  { id: 'maintenance', label: 'System maintenance reminders', enabled: true }
];

// ============================================================================
// Utility Functions
// ============================================================================

export const getComplexityColor = (complexity: string): string => {
  switch (complexity) {
    case 'simple': return 'text-green-400';
    case 'moderate': return 'text-yellow-400';
    case 'complex': return 'text-red-400';
    default: return 'text-gray-400';
  }
};

export const getStatusIcon = (status: string): string => {
  switch (status) {
    case 'pending': return '‚è≥';
    case 'running': return 'üîÑ';
    case 'completed': return '‚úÖ';
    case 'error': return '‚ùå';
    case 'manual_review': return 'üë§';
    default: return '‚è≥';
  }
};

export const getPerformanceData = () => ({
  cpu: [45, 52, 48, 67, 71, 58, 62, 67],
  memory: [38, 41, 39, 42, 45, 44, 41, 42],
  network: [25, 58, 72, 89, 65, 45, 78, 82],
  queue: [15, 18, 22, 27, 23, 19, 21, 23]
});